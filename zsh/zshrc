#==================================================
# autoload
#==================================================

autoload -Uz colors && colors
autoload -Uz compinit && compinit
autoload -Uz promptinit && promptinit
autoload -Uz vcs_info && vcs_info
autoload -Uz add-zsh-hook

#==================================================
# completion
#==================================================

zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}

#==================================================
# colors
#==================================================

export CLICOLOR=1
export LSCOLORS=exfxcxdxbxegedabagacad
export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'

#==================================================
# options
#==================================================

setopt share_history
setopt histignorealldups
setopt auto_cd
setopt prompt_subst
setopt correct

#==================================================
# History
#==================================================

export HISTFILE=~/.zhistory
export HISTSIZE=10000
export SAVEHIST=50000

#==================================================
# Key
#==================================================

bindkey -v
bindkey -M viins 'jj' vi-cmd-mode

#==================================================
# Aliases
#==================================================

alias _=sudo
alias g='git'
alias gco='git checkout'
alias l='ls'
alias la='ls -a'
alias ll='ls -l'
alias cd='nocorrect cd'
alias cp='nocorrect cp -i'
alias mkdir='nocorrect mkdir -p'
alias mv='nocorrect mv -i'
alias rm='nocorrect rm -i'
alias ln='nocorrect ln -i'
alias F=' | fzf'

if [[ -x `which colordiff` ]]; then
  alias diff='colordiff -u'
else
  alias diff='diff -u'
fi

if [ uname = 'Darwin' ]; then
  alias ctags=$(brew --prefix)"/bin/ctags"
fi

#==================================================
# anyenv
#==================================================

if type anyenv > /dev/null 2>&1; then
  eval "$(anyenv init -)"
fi

#==================================================
# fzf
#==================================================

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_OPTS="--height 40% --reverse --border --preview 'head -20 {}'"

#==================================================
# functions
#==================================================

ghcd() {
  dir=$(ghq list | fzf)
  if [[ -n "$dir" ]]; then
    cd "$(ghq root)/$dir"
  fi
}

gho() {
  dir=$(ghq list | fzf)
  if [[ -n "$dir" ]]; then
    open "https://$dir"
  fi
}

#==================================================
# zplug
#==================================================

if [ ! -e $HOME"/.zplug" ]; then
  curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh
fi

source ~/.zplug/init.zsh

# Plugins
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "zsh-users/zsh-autosuggestions"
zplug "b4b4r07/enhancd", use:init.sh

if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load

#==================================================
# Prompt
#==================================================
#
separator=''

# VIMODE setting
VIMODE="%K{green}%F{white} INSERT %f%k"
function zle-keymap-select {
  VINORMAL="%K{yellow}%F{white} NORMAL %f%k"
  VIINSERT="%K{green}%F{white} INSERT %f%k"
  VIMODE="${${KEYMAP/vicmd/$VINORMAL}/(main|viins)/$VIINSERT}"
  zle reset-prompt
  VIMODE="%K{green}%F{white} INSERT %f%k"
}
zle -N zle-keymap-select

function name_prompt {
  echo "%K{black}%F{red}@%F{black}%n %f%k"
}

function dir_prompt {
  echo "%K{blue}%F{white}${separator} %(5~,%-2~...%2~,%~) %f%k"
}

function _update_vcs_info_msg() {
  psvar=()
  LANG=en_US.UTF-8 vcs_info
  [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}

add-zsh-hook precmd _update_vcs_info_msg

function git_prompt {
  if [[ "$PWD" =~ '/\.git(/.*)?$' ]]; then
    echo "%F{black}${separator}%f"
    return 1
  fi
  if [[ $(command git rev-parse --is-inside-work-tree 2> /dev/null) != 'true' ]]; then
    echo "%F{black}${separator}%f"
    return 1
  fi
  echo "%K{green}%F{white}${separator} ${vcs_info_msg_0_} %f%k%F{green}${separator}%f"
}

zstyle ':vcs_info:*' max-exports 3
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:git:*' formats ' %b %c%u'
zstyle ':vcs_info:git:*' actionformats ' %b %a%c%u'
zstyle ':vcs_info:git:*' check-for-changes true
zstyle ':vcs_info:git:*' stagedstr "+"
zstyle ':vcs_info:git:*' unstagedstr "-"

precmd() { vcs_info }

PROMPT='${VIMODE}$(dir_prompt)$(git_prompt)
$separator'
RPROMPT='%F{blue}[%F{green}%D{%H:%M:%S}%F{blue}]%f'

